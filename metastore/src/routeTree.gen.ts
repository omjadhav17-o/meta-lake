/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from "@tanstack/react-router";

// Import Routes

import { Route as rootRoute } from "./routes/__root";
import { Route as AboutImport } from "./routes/about";
import { Route as IndexImport } from "./routes/index";
import { Route as ChartIndexImport } from "./routes/chart/index";
import { Route as authLoginImport } from "./routes/(auth)/login";

// Create Virtual Routes

const authSignupLazyImport = createFileRoute("/(auth)/signup")();
const AuthenticatedOnboardingIndexLazyImport = createFileRoute(
  "/_authenticated/Onboarding/"
)();
const AuthenticatedDashboardIndexLazyImport = createFileRoute(
  "/_authenticated/Dashboard/"
)();
const AuthenticatedAddCatalogIndexLazyImport = createFileRoute(
  "/_authenticated/AddCatalog/"
)();

// Create/Update Routes

const AboutRoute = AboutImport.update({
  id: "/about",
  path: "/about",
  getParentRoute: () => rootRoute,
} as any);

const IndexRoute = IndexImport.update({
  id: "/",
  path: "/",
  getParentRoute: () => rootRoute,
} as any);

const ChartIndexRoute = ChartIndexImport.update({
  id: "/chart/",
  path: "/chart/",
  getParentRoute: () => rootRoute,
} as any);

const authSignupLazyRoute = authSignupLazyImport
  .update({
    id: "/(auth)/signup",
    path: "/signup",
    getParentRoute: () => rootRoute,
  } as any)
  .lazy(() => import("./routes/(auth)/signup.lazy").then((d) => d.Route));

const authLoginRoute = authLoginImport.update({
  id: "/(auth)/login",
  path: "/login",
  getParentRoute: () => rootRoute,
} as any);

const AuthenticatedOnboardingIndexLazyRoute =
  AuthenticatedOnboardingIndexLazyImport.update({
    id: "/_authenticated/Onboarding/",
    path: "/Onboarding/",
    getParentRoute: () => rootRoute,
  } as any).lazy(() =>
    import("./routes/_authenticated/Onboarding/index.lazy").then((d) => d.Route)
  );

const AuthenticatedDashboardIndexLazyRoute =
  AuthenticatedDashboardIndexLazyImport.update({
    id: "/_authenticated/Dashboard/",
    path: "/Dashboard/",
    getParentRoute: () => rootRoute,
  } as any).lazy(() =>
    import("./routes/_authenticated/Dashboard/index.lazy").then((d) => d.Route)
  );

const AuthenticatedAddCatalogIndexLazyRoute =
  AuthenticatedAddCatalogIndexLazyImport.update({
    id: "/_authenticated/AddCatalog/",
    path: "/AddCatalog/",
    getParentRoute: () => rootRoute,
  } as any).lazy(() =>
    import("./routes/_authenticated/AddCatalog/index.lazy").then((d) => d.Route)
  );

// Populate the FileRoutesByPath interface

declare module "@tanstack/react-router" {
  interface FileRoutesByPath {
    "/": {
      id: "/";
      path: "/";
      fullPath: "/";
      preLoaderRoute: typeof IndexImport;
      parentRoute: typeof rootRoute;
    };
    "/about": {
      id: "/about";
      path: "/about";
      fullPath: "/about";
      preLoaderRoute: typeof AboutImport;
      parentRoute: typeof rootRoute;
    };
    "/(auth)/login": {
      id: "/(auth)/login";
      path: "/login";
      fullPath: "/login";
      preLoaderRoute: typeof authLoginImport;
      parentRoute: typeof rootRoute;
    };
    "/(auth)/signup": {
      id: "/(auth)/signup";
      path: "/signup";
      fullPath: "/signup";
      preLoaderRoute: typeof authSignupLazyImport;
      parentRoute: typeof rootRoute;
    };
    "/chart/": {
      id: "/chart/";
      path: "/chart";
      fullPath: "/chart";
      preLoaderRoute: typeof ChartIndexImport;
      parentRoute: typeof rootRoute;
    };
    "/_authenticated/AddCatalog/": {
      id: "/_authenticated/AddCatalog/";
      path: "/AddCatalog";
      fullPath: "/AddCatalog";
      preLoaderRoute: typeof AuthenticatedAddCatalogIndexLazyImport;
      parentRoute: typeof rootRoute;
    };
    "/_authenticated/Dashboard/": {
      id: "/_authenticated/Dashboard/";
      path: "/Dashboard";
      fullPath: "/Dashboard";
      preLoaderRoute: typeof AuthenticatedDashboardIndexLazyImport;
      parentRoute: typeof rootRoute;
    };
    "/_authenticated/Onboarding/": {
      id: "/_authenticated/Onboarding/";
      path: "/Onboarding";
      fullPath: "/Onboarding";
      preLoaderRoute: typeof AuthenticatedOnboardingIndexLazyImport;
      parentRoute: typeof rootRoute;
    };
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  "/": typeof IndexRoute;
  "/about": typeof AboutRoute;
  "/login": typeof authLoginRoute;
  "/signup": typeof authSignupLazyRoute;
  "/chart": typeof ChartIndexRoute;
  "/AddCatalog": typeof AuthenticatedAddCatalogIndexLazyRoute;
  "/Dashboard": typeof AuthenticatedDashboardIndexLazyRoute;
  "/Onboarding": typeof AuthenticatedOnboardingIndexLazyRoute;
}

export interface FileRoutesByTo {
  "/": typeof IndexRoute;
  "/about": typeof AboutRoute;
  "/login": typeof authLoginRoute;
  "/signup": typeof authSignupLazyRoute;
  "/chart": typeof ChartIndexRoute;
  "/AddCatalog": typeof AuthenticatedAddCatalogIndexLazyRoute;
  "/Dashboard": typeof AuthenticatedDashboardIndexLazyRoute;
  "/Onboarding": typeof AuthenticatedOnboardingIndexLazyRoute;
}

export interface FileRoutesById {
  __root__: typeof rootRoute;
  "/": typeof IndexRoute;
  "/about": typeof AboutRoute;
  "/(auth)/login": typeof authLoginRoute;
  "/(auth)/signup": typeof authSignupLazyRoute;
  "/chart/": typeof ChartIndexRoute;
  "/_authenticated/AddCatalog/": typeof AuthenticatedAddCatalogIndexLazyRoute;
  "/_authenticated/Dashboard/": typeof AuthenticatedDashboardIndexLazyRoute;
  "/_authenticated/Onboarding/": typeof AuthenticatedOnboardingIndexLazyRoute;
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath;
  fullPaths:
    | "/"
    | "/about"
    | "/login"
    | "/signup"
    | "/chart"
    | "/AddCatalog"
    | "/Dashboard"
    | "/Onboarding";
  fileRoutesByTo: FileRoutesByTo;
  to:
    | "/"
    | "/about"
    | "/login"
    | "/signup"
    | "/chart"
    | "/AddCatalog"
    | "/Dashboard"
    | "/Onboarding";
  id:
    | "__root__"
    | "/"
    | "/about"
    | "/(auth)/login"
    | "/(auth)/signup"
    | "/chart/"
    | "/_authenticated/AddCatalog/"
    | "/_authenticated/Dashboard/"
    | "/_authenticated/Onboarding/";
  fileRoutesById: FileRoutesById;
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute;
  AboutRoute: typeof AboutRoute;
  authLoginRoute: typeof authLoginRoute;
  authSignupLazyRoute: typeof authSignupLazyRoute;
  ChartIndexRoute: typeof ChartIndexRoute;
  AuthenticatedAddCatalogIndexLazyRoute: typeof AuthenticatedAddCatalogIndexLazyRoute;
  AuthenticatedDashboardIndexLazyRoute: typeof AuthenticatedDashboardIndexLazyRoute;
  AuthenticatedOnboardingIndexLazyRoute: typeof AuthenticatedOnboardingIndexLazyRoute;
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AboutRoute: AboutRoute,
  authLoginRoute: authLoginRoute,
  authSignupLazyRoute: authSignupLazyRoute,
  ChartIndexRoute: ChartIndexRoute,
  AuthenticatedAddCatalogIndexLazyRoute: AuthenticatedAddCatalogIndexLazyRoute,
  AuthenticatedDashboardIndexLazyRoute: AuthenticatedDashboardIndexLazyRoute,
  AuthenticatedOnboardingIndexLazyRoute: AuthenticatedOnboardingIndexLazyRoute,
};

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>();

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/about",
        "/(auth)/login",
        "/(auth)/signup",
        "/chart/",
        "/_authenticated/AddCatalog/",
        "/_authenticated/Dashboard/",
        "/_authenticated/Onboarding/"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/about": {
      "filePath": "about.tsx"
    },
    "/(auth)/login": {
      "filePath": "(auth)/login.tsx"
    },
    "/(auth)/signup": {
      "filePath": "(auth)/signup.lazy.tsx"
    },
    "/chart/": {
      "filePath": "chart/index.tsx"
    },
    "/_authenticated/AddCatalog/": {
      "filePath": "_authenticated/AddCatalog/index.lazy.ts"
    },
    "/_authenticated/Dashboard/": {
      "filePath": "_authenticated/Dashboard/index.lazy.ts"
    },
    "/_authenticated/Onboarding/": {
      "filePath": "_authenticated/Onboarding/index.lazy.ts"
    }
  }
}
ROUTE_MANIFEST_END */
